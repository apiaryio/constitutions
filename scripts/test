#!/bin/bash

CWD=`pwd`

BASE_DIR=.
STYLEGUIDES_DIR=$BASE_DIR/styleguides
RULES_DIR=$BASE_DIR/rules
LINTER_CMD=linter
AD=api-description-document
ERRORMSG=error

# Iterate on styleguides
for styleguide in \
  `find $STYLEGUIDES_DIR -type d -depth 1 | tr / ' ' | awk '{print $NF}'` \
; do
  echo "Testing styleguide '$styleguide'"
  # Iterate on enabled rules
  styleguide_dir=$STYLEGUIDES_DIR/$styleguide

  for enabled_rule in `cat $styleguide_dir/enabled_rules`; do
    rule_dir=$RULES_DIR/$enabled_rule

    echo "  Testing rule '$enabled_rule'"

    # Iterate on good examples
    good_examples_path=$RULES_DIR/$enabled_rule/good-examples/
    for example_dir in \
      `find $good_examples_path -type d -depth 1 | tr / ' ' | awk '{print $NF}'` \
    ; do
      echo "    Expecting good example '${example_dir}' to pass"


      # Doing this because linters might not handle well diffrent working dir
      cd $styleguide_dir/linter/

      # Run the test
      testcmd="./$LINTER_CMD ../../../$good_examples_path/$example_dir/$AD"

      # Expect them to pass
      # exit 1 if not
      if ! output=$($testcmd); then
        echo $output
        echo "FAIL: Good example is failing"
        exit 1
      fi
      echo "      PASS"

      cd $CWD
    done

    # Iterate on all bad exapmles
    bad_examples_path=$RULES_DIR/$enabled_rule/bad-examples/
    for example_dir in \
      `find $bad_examples_path -type d -depth 1 | tr / ' ' | awk '{print $NF}'` \
    ; do
      echo "    Expecting bad example '${example_dir}' to fail"

      testcmd="./$LINTER_CMD ../../../$bad_examples_path/$example_dir/$AD"

      errormsg=`cat $RULES_DIR/$enabled_rule/bad-examples/$example_dir/$ERRORMSG`

      # Doing this because linters might not handle well diffrent working dir
      cd $styleguide_dir/linter/

      # Expect them to fail
      # Expect the message
      # exit 1 if not
      if output=$($testcmd); then
        echo $output
        echo "FAIL: Bad example is passing"
        exit 1
      fi

      if [[ $output =~ .*$errormsg.* ]]; then
        echo $output
        echo "FAIL: Expected error message not found in the output '$errormsg'"
        exit 1
      fi
      cd $CWD

      echo "      PASS"
    done
  done
done

exit 0
# Exit 0
